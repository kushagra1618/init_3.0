// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fb

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Dob struct {
	_tab flatbuffers.Struct
}

func (rcv *Dob) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Dob) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Dob) Day() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Dob) MutateDay(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Dob) Month() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *Dob) MutateMonth(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func (rcv *Dob) Year() int16 {
	return rcv._tab.GetInt16(rcv._tab.Pos + flatbuffers.UOffsetT(2))
}
func (rcv *Dob) MutateYear(n int16) bool {
	return rcv._tab.MutateInt16(rcv._tab.Pos+flatbuffers.UOffsetT(2), n)
}

func CreateDob(builder *flatbuffers.Builder, day byte, month byte, year int16) flatbuffers.UOffsetT {
	builder.Prep(2, 4)
	builder.PrependInt16(year)
	builder.PrependByte(month)
	builder.PrependByte(day)
	return builder.Offset()
}
